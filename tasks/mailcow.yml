---
# Title: Mailcow server
#
# Author: Bitfinity / L. Rutten
# Owner: Bitfinity / L. Rutten
#
# File: tasks/mailcow.yml
#
# Description:
#   This taskfile contains the settings for installing a Mailcow mailserver.
#
# Source(s):
#   - https://github.com/mailcow/mailcow-ansiblerole/
#
- name: "Check if configuration file '/opt/mailcow-dockerized/mailcow.conf' for mailcow exists on '{{ ansible_hostname }}'"
  ansible.builtin.stat:
    path: /opt/mailcow-dockerized/mailcow.conf
  register: stat_result_mailcow_conf
  
- name: "Git clone mailcow https://github.com/mailcow/mailcow-dockerized"
  ansible.builtin.git:
    repo: 'https://github.com/mailcow/mailcow-dockerized'
    dest: /opt/mailcow-dockerized
  when: not stat_result_mailcow_conf.stat.exists

- name: "Configure '/opt/mailcow-dockerized/generate_config.sh' file for ini unattended initialize mailcow on '{{ ansible_hostname }}'"
  ansible.builtin.blockinfile:
    path:  /opt/mailcow-dockerized/generate_config.sh
    marker: "# <!-- {mark} ANSIBLE MANAGED BLOCK -->"
    insertafter: "#!/usr/bin/env bash"
    block: |
      MAILCOW_HOSTNAME="{{ MC_MAILCOW_HOSTNAME }}"
      MAILCOW_TZ="{{ MC_TZ }}"
      MAILCOW_BRANCH=1
      SKIP_CLAMD="{{ MC_SKIP_CLAMD }}"
  when: not stat_result_mailcow_conf.stat.exists

- name: "Initialize mailcow by running file '/opt/mailcow-dockerized/generate_config.sh' and start docker service Mailcow on '{{ ansible_hostname }}'"
  ansible.builtin.command: ./generate_config.sh
  args:
    chdir: /opt/mailcow-dockerized
  notify: start_docker_service_mailcow
  when: not stat_result_mailcow_conf.stat.exists  
